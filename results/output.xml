<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.8 on win32)" generated="2025-10-14T15:28:56.624304" rpa="false" schemaversion="5">
<suite id="s1" name="Robot" source="C:\Users\joao.carlos_d4sign\Desktop\Robot">
<suite id="s1-s1" name="Tests" source="C:\Users\joao.carlos_d4sign\Desktop\Robot\tests">
<suite id="s1-s1-s1" name="Api" source="C:\Users\joao.carlos_d4sign\Desktop\Robot\tests\api">
<suite id="s1-s1-s1-s1" name="Posts" source="C:\Users\joao.carlos_d4sign\Desktop\Robot\tests\api\posts">
<suite id="s1-s1-s1-s1-s1" name="Posts-API" source="C:\Users\joao.carlos_d4sign\Desktop\Robot\tests\api\posts\Posts-API.robot">
<test id="s1-s1-s1-s1-s1-t1" name="2 - Upload de documento bin√°rio - base64" line="34">
<kw name="Log Upload Test Info" owner="tag_logging">
<kw name="Log Tag Info" owner="tag_logging">
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-10-14T15:28:57.777054" level="INFO">${emoji} = üì§</msg>
<var>${emoji}</var>
<arg>'${tag}' == '${SMOKE_TAG}'</arg>
<arg>üî•</arg>
<arg>'${tag}' == '${API_TAG}'</arg>
<arg>üåê</arg>
<arg>'${tag}' == '${UI_TAG}'</arg>
<arg>üñ•Ô∏è</arg>
<arg>'${tag}' == '${CRITICAL_TAG}'</arg>
<arg>‚ö†Ô∏è</arg>
<arg>'${tag}' == '${REGRESSION_TAG}'</arg>
<arg>üîÑ</arg>
<arg>'${tag}' == '${LOGIN_TAG}'</arg>
<arg>üîê</arg>
<arg>'${tag}' == '${UPLOAD_TAG}'</arg>
<arg>üì§</arg>
<arg>'${tag}' == '${SIGNATURE_TAG}'</arg>
<arg>‚úçÔ∏è</arg>
<arg>'${tag}' == '${TEMPLATE_TAG}'</arg>
<arg>üìÑ</arg>
<arg>'${tag}' == '${BATCH_TAG}'</arg>
<arg>üì¶</arg>
<arg>üè∑Ô∏è</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2025-10-14T15:28:57.770636" elapsed="0.007240"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-14T15:28:57.779453" level="INFO">üì§ [upload] Iniciando upload bin√°rio base64</msg>
<arg>${emoji} [${tag}] ${message}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-14T15:28:57.778400" elapsed="0.001671"/>
</kw>
<arg>${UPLOAD_TAG}</arg>
<arg>${message}</arg>
<doc>Log informa√ß√µes espec√≠ficas baseadas na tag do teste</doc>
<status status="PASS" start="2025-10-14T15:28:57.769611" elapsed="0.010724"/>
</kw>
<arg>Iniciando upload bin√°rio base64</arg>
<doc>Log espec√≠fico para testes de upload</doc>
<status status="PASS" start="2025-10-14T15:28:57.768765" elapsed="0.011727"/>
</kw>
<kw name="Upload Binario" owner="api_keywords">
<kw name="File Should Exist" owner="OperatingSystem">
<msg time="2025-10-14T15:28:57.782992" level="INFO" html="true">File '&lt;a href="file://C:\Users\joao.carlos_d4sign\Desktop\Robot\data\files\doc-testes.pdf"&gt;C:\Users\joao.carlos_d4sign\Desktop\Robot\data\files\doc-testes.pdf&lt;/a&gt;' exists.</msg>
<arg>${RELATIVE_PATH}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="PASS" start="2025-10-14T15:28:57.781900" elapsed="0.001676"/>
</kw>
<kw name="Convert File To Base64" owner="api_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-14T15:28:57.790079" level="INFO">${base64_string} = JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PC9UaXRsZSA8RkVGRjAwNTIwMDY1MDA2QzAwNjEwMDc0MDBGMzAwNzIwMDY5MDA2RjAwMjAwMDY0MDA2NTAwMjAwMDQ1MDA3MzAwNzQwMDcyMDA2MTAwNzQwMEU5MDA2NzAwNjkwMDYxMDAyMDAwNjQwMDY1MDAyMDAwNTQw...</msg>
<var>${base64_string}</var>
<arg>__import__('base64').b64encode(open(r'''${file_path}''', 'rb').read()).decode('utf-8')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-14T15:28:57.784909" elapsed="0.005587"/>
</kw>
<return>
<value>${base64_string}</value>
<status status="PASS" start="2025-10-14T15:28:57.790677" elapsed="0.000467"/>
</return>
<msg time="2025-10-14T15:28:57.791535" level="INFO">${base64pdf} = JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PC9UaXRsZSA8RkVGRjAwNTIwMDY1MDA2QzAwNjEwMDc0MDBGMzAwNzIwMDY5MDA2RjAwMjAwMDY0MDA2NTAwMjAwMDQ1MDA3MzAwNzQwMDcyMDA2MTAwNzQwMEU5MDA2NzAwNjkwMDYxMDAyMDAwNjQwMDY1MDAyMDAwNTQw...</msg>
<var>${base64pdf}</var>
<arg>${RELATIVE_PATH}</arg>
<status status="PASS" start="2025-10-14T15:28:57.784042" elapsed="0.008002"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-14T15:28:57.793671" level="INFO">&amp;{headers} = { tokenAPI=live_edbbbe82a765d29e08d33066fca8187d4d33af4ae5069f63f2532a33e157a3cc | cryptKey=live_crypt_986BQliUIFNKCO2ZlDCubKHZkIapJpTA | Content-Type=application/json | Accept=application/json }</msg>
<var>&amp;{headers}</var>
<arg>tokenAPI=${TOKEN_API}</arg>
<arg>cryptKey=${CRYPT_KEY}</arg>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-14T15:28:57.792329" elapsed="0.001952"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-14T15:28:57.795844" level="INFO">&amp;{body} = { base64_binary_file=JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PC9UaXRsZSA8RkVGRjAwNTIwMDY1MDA2QzAwNjEwMDc0MDBGMzAwNzIwMDY5MDA2RjAwMjAwMDY0MDA2NTAwMjAwMDQ1MDA3MzAwNzQwMDcyMDA2MTAwNzQwMEU5MDA2NzAwNjkwMDYxMDAyMDA...</msg>
<var>&amp;{body}</var>
<arg>base64_binary_file=${base64pdf}</arg>
<arg>mime_type=${MIME_TYPE}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-14T15:28:57.794784" elapsed="0.001687"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set To Dictionary" owner="Collections">
<arg>${body}</arg>
<arg>name</arg>
<arg>${NOME}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-10-14T15:28:57.799135" elapsed="0.000799"/>
</kw>
<arg>'${NOME}' != ''</arg>
<arg>Set To Dictionary</arg>
<arg>${body}</arg>
<arg>name</arg>
<arg>${NOME}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-14T15:28:57.797226" elapsed="0.002939"/>
</kw>
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-10-14T15:28:57.800981" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-10-14T15:28:57.800445" elapsed="0.001073"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-14T15:28:57.802664" level="INFO">Creating Session using : alias=d4sign_binary, url=https://secure.d4sign.com.br/api/v1, headers={'tokenAPI': 'live_edbbbe82a765d29e08d33066fca8187d4d33af4ae5069f63f2532a33e157a3cc', 'cryptKey': 'live_crypt_986BQliUIFNKCO2ZlDCubKHZkIapJpTA', 'Content-Type': 'application/json', 'Accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>d4sign_binary</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-14T15:28:57.801844" elapsed="0.001665"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-14T15:29:10.309880" level="INFO">POST Request : url=https://secure.d4sign.com.br/api/v1/documents/27431c09-bf98-418b-8727-1abfabae28c9/uploadbinary 
 path_url=/api/v1/documents/27431c09-bf98-418b-8727-1abfabae28c9/uploadbinary 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'tokenAPI': 'live_edbbbe82a765d29e08d33066fca8187d4d33af4ae5069f63f2532a33e157a3cc', 'cryptKey': 'live_crypt_986BQliUIFNKCO2ZlDCubKHZkIapJpTA', 'Content-Type': 'application/json', 'Content-Length': '96078'} 
 body=b'{"base64_binary_file": "'... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-10-14T15:29:10.312074" level="INFO">POST Response : url=https://secure.d4sign.com.br/api/v1/documents/27431c09-bf98-418b-8727-1abfabae28c9/uploadbinary 
 status=200, reason=OK 
 headers={'Date': 'Tue, 14 Oct 2025 18:29:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'Connection': 'keep-alive', 'Set-Cookie': 'AWSALBTG=xMYjtsz1tKsQ7d+XkXTSYk9o6s6dgqh4F93YlxbK6vUgkNUy49KZbUwcusBYlsYL5+/MAQtrLhgL2ynWTyhkCaVG6ZvGfSdyz83qmBElNmjZSfFgGHXExcCsbwlBhtiNxJewzDC6pVcPz4TtuFlPI6uITHw1VxpRWJP7ANh6UqgDT6vdmss=; Expires=Tue, 21 Oct 2025 18:28:59 GMT; Path=/, AWSALBTGCORS=xMYjtsz1tKsQ7d+XkXTSYk9o6s6dgqh4F93YlxbK6vUgkNUy49KZbUwcusBYlsYL5+/MAQtrLhgL2ynWTyhkCaVG6ZvGfSdyz83qmBElNmjZSfFgGHXExcCsbwlBhtiNxJewzDC6pVcPz4TtuFlPI6uITHw1VxpRWJP7ANh6UqgDT6vdmss=; Expires=Tue, 21 Oct 2025 18:28:59 GMT; Path=/; SameSite=None; Secure, AWSALB=DvOOPPgg4MsQkEl+Sf4CnIIKz1opmPNanKkk9kNVErQFNA0j/hitvW8GmyOPJCwKntDssJL8QDrIQSA9WZBvRZvWBDDkbgBJNTiI710X1NTErCQxs+YXPeMFmHEP; Expires=Tue, 21 Oct 2025 18:28:59 GMT; Path=/, AWSALBCORS=DvOOPPgg4MsQkEl+Sf4CnIIKz1opmPNanKkk9kNVErQFNA0j/hitvW8GmyOPJCwKntDssJL8QDrIQSA9WZBvRZvWBDDkbgBJNTiI710X1NTErCQxs+YXPeMFmHEP; Expires=Tue, 21 Oct 2025 18:28:59 GMT; Path=/; SameSite=None; Secure, ci_session=8nk4kehvctmuel19nq398o4aam0kvn6b; expires=Tue, 14-Oct-2025 20:29:08 GMT; Max-Age=7200; path=/; secure; HttpOnly', 'Server': 'Apache/2.4.41 (Ubuntu)', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains', 'X-Content-Type-Options': 'nosniff', 'Expires': 'Thu, 19 Nov 1981 08:52:00 GMT', 'Cache-Control': 'no-store, no-cache, must-revalidate', 'Pragma': 'no-cache', 'X-XSS-Protection': '1; mode=block'} 
 body={"message":"success","uuid":"d2a1e984-4f8d-4e55-9078-b7a08b96ec23"} 
 </msg>
<msg time="2025-10-14T15:29:10.312435" level="INFO">C:\Users\joao.carlos_d4sign\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'secure.d4sign.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-10-14T15:29:10.313165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>d4sign_binary</arg>
<arg>/documents/${UUID_SAFE1}/uploadbinary</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-14T15:28:57.803783" elapsed="12.509751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-14T15:29:10.313799" elapsed="0.000388"/>
</return>
<msg time="2025-10-14T15:29:10.314430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${RELATIVE_PATH}</arg>
<arg>${UUID_SAFE1}</arg>
<arg>${TOKEN_API}</arg>
<arg>${CRYPT_KEY}</arg>
<arg>${MIME_TYPE}</arg>
<arg>${NOME}</arg>
<status status="PASS" start="2025-10-14T15:28:57.781059" elapsed="12.533653"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>STATUS: ${response.status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-14T15:29:10.315556" elapsed="0.005413"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>BODY: ${response.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-14T15:29:10.321355" elapsed="0.002202"/>
</kw>
<kw name="Log Response Time" owner="api_keywords">
<kw name="Convert To String" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.330561" level="INFO">${tempo_str} = 0:00:12.493211</msg>
<var>${tempo_str}</var>
<arg>${response.elapsed}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2025-10-14T15:29:10.324661" elapsed="0.007841"/>
</kw>
<kw name="Split String" owner="String">
<msg time="2025-10-14T15:29:10.334351" level="INFO">${partes} = ['0', '00', '12.493211']</msg>
<var>${partes}</var>
<arg>${tempo_str}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-10-14T15:29:10.333036" elapsed="0.002426"/>
</kw>
<kw name="Convert To Number" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.337793" level="INFO">${segundos} = 12.493211</msg>
<var>${segundos}</var>
<arg>${partes}[2]</arg>
<doc>Converts the given item to a floating point number.</doc>
<status status="PASS" start="2025-10-14T15:29:10.336111" elapsed="0.002009"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.342990" level="INFO">${tempo_arredondado} = 12.493</msg>
<var>${tempo_arredondado}</var>
<arg>round(${segundos}, 3)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-14T15:29:10.338403" elapsed="0.005010"/>
</kw>
<return>
<value>${tempo_arredondado}</value>
<status status="PASS" start="2025-10-14T15:29:10.343647" elapsed="0.000424"/>
</return>
<msg time="2025-10-14T15:29:10.344381" level="INFO">${tempo} = 12.493</msg>
<var>${tempo}</var>
<arg>${response}</arg>
<status status="PASS" start="2025-10-14T15:29:10.324056" elapsed="0.020806"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Tempo de resposta: ${tempo} segundos</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-14T15:29:10.345648" elapsed="0.001780"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.351342" level="INFO">Tempo de resposta: 12.493 segundos</msg>
<arg>Tempo de resposta: ${tempo} segundos</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-14T15:29:10.349333" elapsed="0.002426"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2025-10-14T15:29:10.352406" elapsed="0.001037"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.358522" level="INFO">Length is 67.</msg>
<arg>${response.text}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-14T15:29:10.354048" elapsed="0.007524"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.364591" level="INFO">${json} = {'message': 'success', 'uuid': 'd2a1e984-4f8d-4e55-9078-b7a08b96ec23'}</msg>
<var>${json}</var>
<arg>${response}</arg>
<arg>json</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2025-10-14T15:29:10.363082" elapsed="0.002154"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.373484" level="INFO">Length is 36.</msg>
<arg>${json['uuid']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-14T15:29:10.366617" elapsed="0.007997"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${json['uuid']}</arg>
<arg>^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-14T15:29:10.375337" elapsed="0.007013"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${json['message']}</arg>
<arg>success</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-14T15:29:10.383018" elapsed="0.002992"/>
</kw>
<kw name="Log Response As Formatted JSON" owner="api_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.394846" level="INFO">${json} = {'message': 'success', 'uuid': 'd2a1e984-4f8d-4e55-9078-b7a08b96ec23'}</msg>
<var>${json}</var>
<arg>json.loads(r'''${response.text}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-14T15:29:10.389595" elapsed="0.007391"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.402009" level="INFO">${pretty} = {
  "message": "success",
  "uuid": "d2a1e984-4f8d-4e55-9078-b7a08b96ec23"
}</msg>
<var>${pretty}</var>
<arg>json.dumps(${json}, indent=2, ensure_ascii=False)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-14T15:29:10.398387" elapsed="0.003947"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.403439" level="INFO">{
  "message": "success",
  "uuid": "d2a1e984-4f8d-4e55-9078-b7a08b96ec23"
}</msg>
<arg>${pretty}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-14T15:29:10.402607" elapsed="0.001420"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${pretty}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-14T15:29:10.404405" elapsed="0.003545"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2025-10-14T15:29:10.386988" elapsed="0.021514"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-14T15:29:10.416383" level="INFO">UUID do documento criado: d2a1e984-4f8d-4e55-9078-b7a08b96ec23</msg>
<arg>UUID do documento criado: ${json['uuid']}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-14T15:29:10.410389" elapsed="0.006662"/>
</kw>
<doc>Faz upload bin√°rio (base64) de um PDF para a D4Sign via /uploadbinary.</doc>
<tag>api</tag>
<tag>regression</tag>
<tag>upload</tag>
<status status="PASS" start="2025-10-14T15:28:57.749443" elapsed="12.669325"/>
</test>
<status status="PASS" start="2025-10-14T15:28:56.787586" elapsed="13.685389"/>
</suite>
<status status="PASS" start="2025-10-14T15:28:56.779969" elapsed="13.701891"/>
</suite>
<status status="PASS" start="2025-10-14T15:28:56.773667" elapsed="13.714685"/>
</suite>
<status status="PASS" start="2025-10-14T15:28:56.763335" elapsed="13.758635"/>
</suite>
<status status="PASS" start="2025-10-14T15:28:56.639115" elapsed="13.889323"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">regression</stat>
<stat pass="1" fail="0" skip="0">upload</stat>
</tag>
<suite>
<stat name="Robot" id="s1" pass="1" fail="0" skip="0">Robot</stat>
<stat name="Tests" id="s1-s1" pass="1" fail="0" skip="0">Robot.Tests</stat>
<stat name="Api" id="s1-s1-s1" pass="1" fail="0" skip="0">Robot.Tests.Api</stat>
<stat name="Posts" id="s1-s1-s1-s1" pass="1" fail="0" skip="0">Robot.Tests.Api.Posts</stat>
<stat name="Posts-API" id="s1-s1-s1-s1-s1" pass="1" fail="0" skip="0">Robot.Tests.Api.Posts.Posts-API</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
